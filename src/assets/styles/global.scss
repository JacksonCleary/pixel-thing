@use 'mixins' as *;

::selection {
  background-color: var(--color-blue);
  color: var(--color-light);
}

body {
  border: 0;
  box-sizing: border-box;
  font-family: var(--font-family);
  height: 100vh;
  margin: 0;
  padding: 0.75rem;
  width: 100vw;

  &::before {
    background: var(--body-bg) no-repeat center center;
    background-size: cover;
    content: '';
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 0;
  }

  &::after {
    background: rgba(255, 255, 255, 0.2);
    content: '';
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 1;
  }

  & > div {
    z-index: 2;
  }

  & * {
    box-sizing: border-box;
  }
}

#app {
  background-color: var(--app-bg);
  border: 0.125rem solid rgba(0, 0, 0, 0);
  border-radius: 0.25rem;
  display: flex;
  position: relative;

  #main {
    flex: 1;
    position: relative;
  }
}

#scene,
#ui,
.template-container {
  left: 0;
  position: absolute;
  top: 0;
}

#scene {
  z-index: 1;
}

#app,
#scene,
#ui,
.template-container {
  height: 100%;
  width: 100%;
}

// defaults
p,
a,
li,
span,
button {
  color: var(--color-light);
  font-size: 1rem;
  line-height: var(--line-height);
}

// scene start

body::before,
body::after,
#ui {
  transition: opacity var(--transition-delay-long)
    var(--transition-easing-in-out);
}

body.ready {
  &::before,
  &::after,
  & #ui {
    opacity: 1;
  }

  & #app {
    border-color: var(--color-blue);
    /* instantiated here to prevent initial black opacity artifact */
    transition: border-color var(--transition-delay-long)
      var(--transition-easing-in-out) var(--transition-delay-medium);
  }

  & #ui {
    z-index: 2;
  }
}
